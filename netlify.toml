# Netlify Configuration for RecruitAI Frontend
# Optimized for React 18 + Create React App deployment

[build]
  # Build command - using npm instead of pnpm for better compatibility
  command = "npm run build"
  
  # Directory to publish (Create React App builds to 'build' folder)
  publish = "build"
  
  # Environment variables for build optimization
  [build.environment]
    # Node.js version (LTS)
    NODE_VERSION = "18"
    
    # npm version
    NPM_VERSION = "10"
    
    # Disable source maps for faster builds and smaller bundles
    GENERATE_SOURCEMAP = "false"
    
    # Optimize build for production
    NODE_ENV = "production"
    
    # Increase Node.js memory limit for large builds
    NODE_OPTIONS = "--max-old-space-size=4096"
    
    # Skip preflight check for faster builds
    SKIP_PREFLIGHT_CHECK = "true"
    
    # API base URL for your backend
    VITE_API_BASE_URL = "https://cleanfilesbackend.onrender.com"
    
    # React app context
    REACT_APP_NETLIFY_CONTEXT = "production"

# SPA (Single Page Application) redirect rules
# This ensures all routes work properly in React Router
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false

# Security and performance headers
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Content Security Policy for React apps
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https:; frame-src 'none'; object-src 'none';"
    
    # Performance headers
    X-DNS-Prefetch-Control = "on"
    
    # CORS headers for API calls
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"

# Cache static assets for better performance
[[headers]]
  for = "/static/*"
  [headers.values]
    # Cache static assets for 1 year
    Cache-Control = "public, max-age=31536000, immutable"

# Cache JavaScript and CSS files
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache images
[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.gif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache fonts
[[headers]]
  for = "*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Don't cache the service worker
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Don't cache the main HTML file
[[headers]]
  for = "/index.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Build processing optimizations
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Development settings
[dev]
  command = "npm start"
  port = 3000
  publish = "build"
  autoLaunch = true

# Context-specific settings
[context.production]
  command = "npm run build"
  
[context.deploy-preview]
  command = "npm run build"
  
[context.branch-deploy]
  command = "npm run build"

# Error pages
[[redirects]]
  from = "/404"
  to = "/index.html"
  status = 200

# API proxy (if you need to proxy API calls to avoid CORS)
[[redirects]]
  from = "/api/*"
  to = "https://cleanfilesbackend.onrender.com/api/:splat"
  status = 200
  force = false
  headers = {X-From = "Netlify"}

